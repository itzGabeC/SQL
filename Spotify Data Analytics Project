--Spotify data was downloaded from Kaggle to query.
--Then I created a table to insert Spotify data into.
--Finally, I performed analytics on the data using SQL. 

--Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

--Spotify Data .csv was inputed into the table created.

--I performed data analytics with the following SQL.


--Display artists and their songs and order them by song key (the key the track is in. Integers map to pitches using standard Pitch Class notation. E.g. 0 = C, 1 = C♯/D♭, 2 = D, and so on. If no key was detected, the value is -1 (range: -1; 11).
SELECT
artist_name
,track_name
,song_key
FROM BIT_DB.spotifydata
GROUP BY artist_name, track_name
ORDER BY song_key

--Show the average speechiness, acousticness, and liveness by artist and track. 
SELECT
artist_name
,track_name
,avg(speechiness)
,avg(acousticness)
,avg(liveness)
FROM BIT_DB.spotifydata
GROUP BY artist_name, track_name

--Determine who the Top 10 artists are by popularity.
SELECT track_name, artist_name, popularity
FROM BIT_DB.spotifydata
ORDER BY popularity desc
LIMIT 10
